{"version":3,"sources":["wrike_ist/core.cljs"],"mappings":";AAKA,iCAAA,jCAAMA,0EACHC;AADH,AAEE,IAAAC,qBAAgB,AAAQD;AAAxB,AAAA,oBAAAC;AAAA,AAAA,WAAAA,PAAWC;AAAX,AACE,IAAAD,yBAAkB,kBAAA,lBAACK,iEAAqDJ;AAAxE,AAAA,oBAAAD;AAAA,AAAA,IAAAE,YAAAF;WAAA,AAAAG,4CAAAD,UAAA,IAAA,jEAAYE;AAAZ,AAAA,kDAAA,wDACU,iBAAA,yDAAA,uEAAA,yDAAA,AAAA,xMACE,AAAmBL,0EACnB,0DAAA,1DAACO,6CAAE,AAASP;GAHxB,oEAAA,LAMcK,+DACH,AAAoBL;;AAP/B;;;AADF;;;AAUF,sBAAA,tBAAMQ;AAAN,AAEE,IAAMC,UAAQ,AAAW,AAAWC;AAApC,AACE,IAAAC,qBAAY,AAAgBF;AAA5B,AAAA,oBAAAE;AAAA,SAAAA,LAASC;AAAT,AACE,IAAAD,yBAAqC,AAACZ,+BAAgBa;AAAtD,AAAA,oBAAAD;AAAA,IAAAE,YAAAF;IAAAE,gBAAA,AAAAC,4BAAAD;cAAAA,VAA4BI;YAA5B,AAAAF,4CAAAF,cAAA,lEAAiBG;AAAjB,OACM,iBAAAE,UAAMF,lCAIN;IAJAE,cAAA,EAAA,CAAAA,mBAAAC,oBAAA,AAAAD,YAAA;AAAA,AAAA,QAAAA;KAAA;AACQ,OAACE,wBAAcH;;;KADvB;AAEU,OAACI,2BAAiBJ;;;;AAC1B,OAACK;;;WAEF,WAAKC;AAAL,AACE,AAACC,cAAiBD;;AAClB,OAACE,8CAAe,AAAWF;;;AAClC,mBAAA,ZAACG;;;AACH,mBAAA,ZAACA","names":["wrike-ist.core/extract-details","pr-obj","temp__5753__auto__","body","vec__6561","cljs.core.nth","perm","cljs.core/re-find","cljs.core._EQ_","wrike-ist.core/main","payload","js/shadow.js.shim.module$$actions$github","temp__5751__auto__","pr","map__6565","cljs.core/--destructure-map","cljs.core.get","state","details","G__6568","cljs.core/Keyword","wrike-ist.wrike/link-pr","wrike-ist.wrike/close-task","js/Promise.resolve","error","js/console.trace","js/shadow.js.shim.module$$actions$core.setFailed","js/console.log"],"sourcesContent":["(ns wrike-ist.core\n  (:require [\"@actions/core\" :as core]\n            [\"@actions/github\" :as github]\n            [wrike-ist.wrike :as wrike]))\n\n(defn extract-details\n  [pr-obj]\n  (when-let [body (.-body pr-obj)]\n    (when-let [[perm] (re-find #\"https://www.wrike.com/open\\.htm\\?id=(\\d+)\" body)]\n      {:state (cond\n                ^boolean (.-merged pr-obj) :merged\n                (= (.-state pr-obj) \"closed\") :closed\n                ;; (= (.-mergeable_state pr-obj) \"draft\") :draft\n                :else :open)\n       :permalink perm\n       :pr-url ^String (.-html_url pr-obj)})))\n\n(defn main\n  []\n  (let [payload (.-payload (.-context github))]\n    (if-let [pr (.-pull_request payload)]\n      (if-let [{:keys [state] :as details} (extract-details pr)]\n        (-> (case state\n              :open (wrike/link-pr details)\n              :merged (wrike/close-task details)\n              (js/Promise.resolve))\n            (.catch\n             (fn [error]\n               (js/console.trace error)\n               (core/setFailed (.-message error)))))\n        (js/console.log \"Not task link in PR text\"))\n      (js/console.log \"No pull_request in payload\"))))\n"]}